<% layout('layout', { title: 'Chat' }) %>

<div class="chat-container">
  <div class="sidebar">
    <div class="sidebar-header">
      <h3>Chats</h3>
      <button class="btn btn-icon" id="new-chat-btn">
        <i class="fas fa-plus"></i>
      </button>
    </div>
    
    <div class="chat-list">
      <% if (chats.length === 0) { %>
        <div class="empty-state">
          <p>No chats yet</p>
          <a href="/users/search" class="btn btn-outline">Find friends</a>
        </div>
      <% } else { %>
        <% chats.forEach(chat => { %>
          <a href="/chat/<%= chat.friend.username.substring(1) %>" class="chat-item <%= currentChat === chat.friend.username ? 'active' : '' %>">
            <img src="<%= chat.friend.avatar %>" alt="<%= chat.friend.username %>" class="avatar">
            <div class="chat-info">
              <div class="chat-header">
                <span class="username"><%= chat.friend.username %></span>
                <span class="time"><%= formatTime(chat.timestamp) %></span>
              </div>
              <p class="last-message"><%= chat.lastMessage %></p>
              <div class="status <%= chat.friend.lastSeen > Date.now() - 300000 ? 'online' : 'offline' %>">
                <%= chat.friend.lastSeen > Date.now() - 300000 ? 'Online' : `Last seen ${formatLastSeen(chat.friend.lastSeen)}` %>
              </div>
            </div>
          </a>
        <% }); %>
      <% } %>
    </div>
  </div>
  
  <div class="chat-content">
    <% if (typeof friend === 'undefined') { %>
      <div class="empty-chat">
        <div class="empty-content">
          <i class="fas fa-comments"></i>
          <h3>Select a chat to start messaging</h3>
          <p>Or find new friends to connect with</p>
          <a href="/users/search" class="btn btn-primary">Search Users</a>
        </div>
      </div>
    <% } else { %>
      <div class="chat-header">
        <div class="user-info">
          <img src="<%= friend.avatar %>" alt="<%= friend.username %>" class="avatar">
          <div>
            <h3><%= friend.username %></h3>
            <div class="status <%= friend.lastSeen > Date.now() - 300000 ? 'online' : 'offline' %>">
              <%= friend.lastSeen > Date.now() - 300000 ? 'Online' : `Last seen ${formatLastSeen(friend.lastSeen)}` %>
            </div>
          </div>
        </div>
        <div class="chat-actions">
          <button class="btn btn-icon"><i class="fas fa-phone"></i></button>
          <button class="btn btn-icon"><i class="fas fa-video"></i></button>
          <button class="btn btn-icon"><i class="fas fa-ellipsis-v"></i></button>
        </div>
      </div>
      
      <div class="messages" id="messages-container">
        <% messages.forEach(message => { %>
          <div class="message <%= message.sender.equals(currentUser._id) ? 'sent' : 'received' %>">
            <div class="message-content">
              <p><%= message.content %></p>
              <span class="time"><%= formatTime(message.timestamp) %></span>
            </div>
          </div>
        <% }); %>
      </div>
      
      <div class="message-input">
        <form id="message-form">
          <input type="text" placeholder="Type a message..." autocomplete="off">
          <button type="submit" class="btn btn-icon btn-primary">
            <i class="fas fa-paper-plane"></i>
          </button>
        </form>
      </div>
    <% } %>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    <% if (typeof friend !== 'undefined') { %>
      const socket = io();
      const messageForm = document.getElementById('message-form');
      const messageInput = messageForm.querySelector('input');
      const messagesContainer = document.getElementById('messages-container');
      
      // Прокрутка вниз при загрузке
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
      
      // Обработка отправки сообщения
      messageForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const content = messageInput.value.trim();
        
        if (content) {
          socket.emit('private message', {
            recipient: '<%= friend.username %>',
            content
          });
          
          messageInput.value = '';
        }
      });
      
      // Получение нового сообщения
      socket.on('private message', (data) => {
        const messageElement = document.createElement('div');
        messageElement.className = `message ${data.sender === '<%= currentUser._id %>' ? 'sent' : 'received'}`;
        messageElement.innerHTML = `
          <div class="message-content">
            <p>${data.content}</p>
            <span class="time">${new Date(data.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</span>
          </div>
        `;
        
        messagesContainer.appendChild(messageElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
      });
    <% } %>
  });
</script>
